<beast version='2.0'
       namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions'>

    <!-- tree priors -->
    <mergewith point='treePriorTemplates'>

        <subtemplate id='SampledAncestorTransmissionBirthDeathSkylineModel' class='beast.evolution.speciation.BirthDeathSkylineModel' mainid='SABDSkyline.t:$(n)'
                     suppressInputs='beast.evolution.speciation.BirthDeathSkylineModel.intervalTimes,
	beast.evolution.speciation.BirthDeathSkylineModel.contemp,
	beast.evolution.speciation.BirthDeathSkylineModel.S0,
	beast.evolution.speciation.BirthDeathSkylineModel.tree,
	beast.evolution.speciation.BirthDeathSkylineModel.treeIntervals,
	beast.evolution.speciation.BirthDeathSkylineModel.forceRateChange,
	beast.math.distributions.MarkovChainDistribution.parameter,
	beast.evolution.speciation.BirthDeathSkylineModel.reverseTimeArrays,
	beast.evolution.speciation.BirthDeathSkylineModel.deathRateTimesRelative,
	beast.evolution.speciation.BirthDeathSkylineModel.samplingRateTimesRelative,
	beast.evolution.speciation.BirthDeathSkylineModel.birthRateTimesRelative,
	beast.evolution.speciation.BirthDeathSkylineModel.removalProbabilityTimesRelative,
	beast.evolution.speciation.BirthDeathSkylineModel.originIsRootEdge,
	beast.evolution.speciation.BirthDeathSkylineModel.R0,
	beast.evolution.speciation.BirthDeathSkylineModel.becomeUninfectiousRate,
	beast.evolution.speciation.BirthDeathSkylineModel.samplingProportion,
	beast.evolution.speciation.BirthDeathSkylineModel.rhoSamplingTimes,
	beast.evolution.speciation.BirthDeathSkylineModel.rho,
	beast.evolution.speciation.BirthDeathSkylineModel.conditionOnRhoSampling'>
            <![CDATA[
    <!-- Sampled Ancestor Birth Death Skyline model-->
    <BirthDeathSkylineModel spec="beast.evolution.speciation.BirthDeathSkylineModel" id="SABDSkyline.t:$(n)" tree="@Tree.t:$(n)" conditionOnSurvival="true">
		<parameter name="origin" id="originSASky.t:$(n)" value ="100.0" lower="0."/>
        <parameter name="birthRate" id="birthRateSASky.t:$(n)" value ="1.5 1.5 1.5" lower="0."/>
        <parameter name="deathRate" id="deathRateSASky.t:$(n)" value ="0.2 0.2 0.2" lower="0."/>
        <parameter estimate="false" name="samplingRate" id="samplingRateSASky.t:$(n)" value="0.0 0.5" lower="0." upper="10"/>
        <parameter name="removalProbability" id="rSASky.t:$(n)" value="0.0 0.5" lower="0." upper="1."/>
        <parameter name="birthRateChangeTimes" id="birthRateChangeTimesSASky.t:$(n)" value="2. 1. 0."/>
        <parameter name="deathRateChangeTimes" id="deathRateChangeTimesSASky.t:$(n)" value="2. 1. 0."/>
        <parameter name="samplingRateChangeTimes" id="samplingRateChangeTimesSASky.t:$(n)" value="1. 0."/>
        <parameter name="removalProbabilityChangeTimes" id="rChangeTimesSASky.t:$(n)" value="1. 0."/>
        <reverseTimeArrays spec='parameter.BooleanParameter' value='true true true true true'/>
	</BirthDeathSkylineModel>


	<distribution  id='originPriorSASky.t:$(n)' x="@originSASky.t:$(n)" spec='beast.math.distributions.Prior'>
		<distr spec='beast.math.distributions.Uniform' lower="0." upper="Infinity"/>
	</distribution>
	<distribution id="birthRatePriorSASky.t:$(n)" spec="beast.math.distributions.Prior" x="@birthRateSASky.t:$(n)">
		<distr spec='beast.math.distributions.Uniform' lower="0." upper="Infinity"/>
	</distribution>
	<distribution id="deathRatePriorSASky.t:$(n)" spec="beast.math.distributions.Prior" x="@deathRateSASky.t:$(n)">
		<distr spec='beast.math.distributions.Uniform' lower="0." upper="Infinity"/>
	</distribution>
	<distribution id="samplingRatePriorSASky.t:$(n)" spec="beast.math.distributions.Prior" x="@samplingRateSASky.t:$(n)">
		<distr spec='beast.math.distributions.Uniform' lower="0." upper="Infinity"/>
	</distribution>
	<distribution id="rPriorSASky.t:$(n)" spec="beast.math.distributions.Prior" x="@rSASky.t:$(n)">
        <distr spec='beast.math.distributions.Uniform' lower="0." upper="1."/>
	</distribution>

	<operator id='originScalerSASky.t:$(n)' spec='ScaleOperator' scaleFactor=".75" weight="3" parameter="@originSASky.t:$(n)"/>
    <operator id='birthScalerSASky.t:$(n)' spec='ScaleOperator' scaleFactor=".75" weight="10" parameter="@birthRateSASky.t:$(n)"/>
    <operator id='deathScalerSASky.t:$(n)' spec='ScaleOperator' scaleFactor=".75" weight="10" parameter="@deathRateSASky.t:$(n)"/>
	<operator id='samplingScalerSASky.t:$(n)' spec='ScaleOperator' scaleFactor=".75" weight="10" parameter="@samplingRateSASky.t:$(n)"/>
    <operator id='rScalerSASky.t:$(n)' spec='ScaleOperator' scaleFactor=".9" weight="1" parameter="@rSASky.t:$(n)"/>

    <plugin id='SACountSASky.t:$(n)' spec='beast.evolution.tree.SampledAncestorLogger' tree='@Tree.t:$(n)'/>

    <!-- operators for sampled ancestor trees -->
    <operator id='LeafToSA.t:$(n)' spec='beast.evolution.operators.LeafToSampledAncestorJump' weight="10" tree="@Tree.t:$(n)"/>
    <operator id='SAWilsonBalding.t:$(n)' spec='beast.evolution.operators.SAWilsonBalding' weight="10" tree="@Tree.t:$(n)"/>
    <operator id='SAWide.t:$(n)' spec='beast.evolution.operators.SAExchange' isNarrow="false" weight="10" tree="@Tree.t:$(n)"/>
    <operator id='SANarrow.t:$(n)' spec='beast.evolution.operators.SAExchange' weight="10" tree="@Tree.t:$(n)"/>
    <operator id='SAUniformOperator.t:$(n)' spec='beast.evolution.operators.SAUniform' weight="20" tree="@Tree.t:$(n)"/>
    <operator id='SATreeRootScaler.t:$(n)' spec='beast.evolution.operators.SAScaleOperator' scaleFactor=".95" weight="1" tree="@Tree.t:$(n)" rootOnly='true'/>
    <operator id='SATreeScaler.t:$(n)' spec='beast.evolution.operators.SAScaleOperator' scaleFactor=".95" weight="3" tree="@Tree.t:$(n)"/>

]]>
            <connect srcID='SABDSkyline.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(SABDSkyline.t:$(n)) and inlikelihood(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'/>

            <connect srcID='originPriorSASky.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(SABDSkyline.t:$(n)) and originSASky.t:$(n)/estimate=true'>prior on originSASky.t:$(n)</connect>
            <connect srcID='birthRatePriorSASky.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(SABDSkyline.t:$(n)) and birthRateSASky.t:$(n)/estimate=true'>prior on birthRateSASky.t:$(n)</connect>
            <connect srcID='deathRatePriorSASky.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(SABDSkyline.t:$(n)) and deathRateSASky.t:$(n)/estimate=true'>prior on deathRateSASky.t:$(n)</connect>
            <connect srcID='samplingRatePriorSASky.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(SABDSkyline.t:$(n)) and samplingRateSASky.t:$(n)/estimate=true'>prior on samplingRateSASky.t:$(n)</connect>
            <connect srcID='rPriorSASky.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(SABDSkyline.t:$(n)) and rSASky.t:$(n)/estimate=true'>prior on rSASky.t:$(n)</connect>

            <connect srcID='originScalerSASky.t:$(n)' targetID='mcmc' inputName='operator'     if='inposterior(SABDSkyline.t:$(n)) and originSASky.t:$(n)/estimate=true'/>
            <connect srcID='birthScalerSASky.t:$(n)' targetID='mcmc' inputName='operator'     if='inposterior(SABDSkyline.t:$(n)) and birthRateSASky.t:$(n)/estimate=true'/>
            <connect srcID='deathScalerSASky.t:$(n)' targetID='mcmc' inputName='operator'     if='inposterior(SABDSkyline.t:$(n)) and deathRateSASky.t:$(n)/estimate=true'/>
            <connect srcID='samplingScalerSASky.t:$(n)' targetID='mcmc' inputName='operator'     if='inposterior(SABDSkyline.t:$(n)) and samplingRateSASky.t:$(n)/estimate=true'/>
            <connect srcID='rScalerSASky.t:$(n)' targetID='mcmc' inputName='operator'     if='inposterior(SABDSkyline.t:$(n)) and rSASky.t:$(n)/estimate=true'/>

            <connect srcID='LeafToSA.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(SABDSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'/>
            <connect srcID='SAWilsonBalding.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(SABDSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'/>
            <connect srcID='SAWide.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(SABDSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'/>
            <connect srcID='SANarrow.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(SABDSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'/>
            <connect srcID='SAUniformOperator.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(SABDSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'/>
            <connect srcID='SATreeRootScaler.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(SABDSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'/>
            <connect srcID='SATreeScaler.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(SABDSkyline.t:$(n)) and Tree.t:$(n)/estimate=true'/>

            <connect srcID='SABDSkyline.t:$(n)' targetID='tracelog' inputName='log' if='inposterior(SABDSkyline.t:$(n))'/>
            <plate var='p' range='origin,birthRate,deathRate,r'>
                <connect srcID='$(p)SASky.t:$(n)' targetID='state' inputName='stateNode' if='inposterior(SABDSkyline.t:$(n)) and $(p)SASky.t:$(n)/estimate=true'/>
                <connect srcID='$(p)SASky.t:$(n)' targetID='tracelog' inputName='log' if='inposterior(SABDSkyline.t:$(n)) and $(p)SASky.t:$(n)/estimate=true'/>
            </plate>
            <connect srcID='SABDSkyline.t:$(n)' targetID='tracelog' inputName='log' if='inposterior(SABDSkyline.t:$(n))'/>

            <connect srcID='SACountSASky.t:$(n)' targetID='tracelog' inputName='log' if='inposterior(SABDSkyline.t:$(n)) and inposterior(Tree.t:$(n))'/>
        </subtemplate>
    </mergewith>

</beast>